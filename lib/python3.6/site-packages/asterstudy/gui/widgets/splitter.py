# -*- coding: utf-8 -*-

# Copyright 2016 EDF R&D
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License Version 3 as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, you may download a copy of license
# from https://www.gnu.org/licenses/gpl-3.0.

"""

Splitter
--------

Custom splitter that draws handle with the gradient background.
"""


from PyQt5 import Qt as Q

__all__ = ['Splitter']

# note: the following pragma is added to prevent pylint complaining
#       about functions that follow Qt naming conventions;
#       it should go after all global functions
# pragma pylint: disable=invalid-name


class Handle(Q.QSplitterHandle):
    """Handle with gradient background."""

    def setColor(self, color):
        """
        Set handle main color.

        Arguments:
            color (QColor): Title main color.
        """
        palette = self.palette()
        palette.setColor(Q.QPalette.Highlight, color)
        self.setPalette(palette)

    def paintEvent(self, event):
        """Redefined from *QSplitterHandle*."""
        base = self.rect()
        if self.orientation() == Q.Qt.Vertical:
            gradient = Q.QLinearGradient(base.topLeft(), base.topRight())
        else:
            gradient = Q.QLinearGradient(base.topLeft(), base.bottomLeft())
        gradient.setColorAt(0, self.palette().color(Q.QPalette.Highlight))
        gradient.setColorAt(1, self.palette().color(Q.QPalette.Window))
        painter = Q.QPainter(self)
        painter.fillRect(base, gradient)
        super().paintEvent(event)


class Splitter(Q.QSplitter):
    """Spltter that draws handles with gradient background."""

    def createHandle(self):
        """Redefined from *QSplitter*."""
        return Handle(self.orientation(), self)
