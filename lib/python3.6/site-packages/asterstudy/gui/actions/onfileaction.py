# -*- coding: utf-8 -*-

# Copyright 2016-2019 EDF R&D
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License Version 3 as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, you may download a copy of license
# from https://www.gnu.org/licenses/gpl-3.0.

"""
On-File action
--------------

The module implements a generic action that manages *On-File* functionality,
an action called with a filename as argument.

"""

from PyQt5 import Qt as Q

__all__ = ["OnFileAction"]

# note: the following pragma is added to prevent pylint complaining
#       about functions that follow Qt naming conventions;
#       it should go after all global functions
# pragma pylint: disable=invalid-name


class OnFileAction(Q.QAction):
    """Action that manages *On-File* functionality."""

    def __init__(self, text, parent, worker):
        """Create action.

        Arguments:
            text (str): Text of the label.
            parent (Optional[QObject]): Parent object. Defaults to *None*.
            worker (*function*): Function that uses the selected file name
                as argument.
        """
        super().__init__(parent)
        self.setText(text)
        self._worker = worker
        self._file_name = None
        self.triggered.connect(self._exec)

    def setFileName(self, file_name):
        """Set file name to action.

        Arguments:
            file_name (str): File path.
        """
        self._file_name = file_name

    def _exec(self):
        """Execute the worker on the selected file."""
        if self._file_name:
            self._worker(self._file_name)
